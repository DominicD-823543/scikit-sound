#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('sksound/sounds.py'): {145L: (0,
        None,
        1,
        0),
        312L: (0,
               None,
               1,
               0),
        518L: (0,
               None,
               1,
               0)},
                     loc('sksound/tests/test_sound.py'): {48L: (0,
        None,
        1,
        0),
        74L: (0,
              None,
              1,
              0)}}
debug.err-values = {loc('sksound/sounds.py'): {}}
edit.bookmarks = {u'vi-a-QRHBzjUz': (loc('sksound/sounds.py'),
                                     {'attrib-starts': [('Sound',
        175),
        ('Sound.generate_sound',
         406)],
                                      'first-line': 359L,
                                      'sel-line': 414L}),
                  u'vi-b-QRHBzjUz': (loc('sksound/sounds.py'),
                                     {'attrib-starts': [('Sound',
        175),
        ('Sound.read_sound',
         266)],
                                      'first-line': 268L,
                                      'sel-line': 326L})}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'RthEwhCzVsPMNPu9JZMxb56dcr'\
        '1rWHsN',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2764949674363528,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (4,),
        (4,
         0)],
                                 'selected-nodes': [(1,
        3)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'All Classes': {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Office/python/CSS/Vestibular_Implants/simulate_VI.py'),
                             'outFile')]],
        'top-node': [('class def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2013/Exercise3_Strebel_2013/Exercise3_Visual.py'),
                      'image')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/Exercises/ex5_solution.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/Exercises/ex5_solution.py'),
                      'main')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovat.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovat.py'),
                      'anova_results')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/bootstrap.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/bootstrap.py'),
                      'calc_bootstrap')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/dist_continuous.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/dist_continuous.py'),
                      'showDistribution')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/multipleTesting.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/multipleTesting.py'),
                      'main')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/multivariate.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/multivariate.py'),
                      'correlation')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/test_stats.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/test_stats.py'),
                      'TestSequenceFunctions')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/twoSample.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/twoSample.py'),
                      'paired_data')]},
        loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/GammaTones.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [[('function def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/GammaTones.py'),
                             'GammaToneApply')],
                           [('function def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/GammaTones.py'),
                             'main')]],
        'selected-nodes': [[('function def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/GammaTones.py'),
                             'GammaToneApply')]],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/GammaTones.py'),
                      'BMMplot')]},
        loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/Sound.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/Sound.py'),
                             'Sound')]],
        'selected-nodes': [[('class def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/Sound.py'),
                             'Sound'),
                            ('function def',
                             loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/Sound.py'),
                             'Sound.__init__')]],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/CSS/Cochlea_Implants/Sound.py'),
                      'main')]},
        loc('../../../../../Python27/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Python27/Lib/site-packages/matplotlib/backend_bases.py'),
                      'CloseEvent')]},
        loc('../../../../../Python27/Lib/site-packages/matplotlib/backends/backend_svg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python27/Lib/site-packages/matplotlib/backends/backend_svg.py'),
                      'backend_version')]},
        loc('../../../../../Python27/Lib/site-packages/numpy/testing/utils.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/numpy/testing/utils.py'),
                      'assert_')]},
        loc('../../../../../Python27/Lib/site-packages/pandas/core/frame.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/pandas/core/frame.py'),
                      'boxplot')]},
        loc('../../../../../Python27/Lib/site-packages/scipy/linalg/basic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/scipy/linalg/basic.py'),
                      'det')]},
        loc('../../../../../Python27/Lib/site-packages/scipy/signal/ltisys.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/scipy/signal/ltisys.py'),
                      'abcd_normalize')]},
        loc('../../../../../Python27/Lib/site-packages/thLib/__init__.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python27/Lib/site-packages/thLib/fitLine.py'),
                      '')]},
        loc('../../../../../Python27/Lib/site-packages/thLib/ransac_circle.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python27/Lib/site-packages/thLib/ransac_circle.py'),
                      'debug_flag')]},
        loc('../../../../../Python27/Lib/site-packages/thLib/ui.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/Lib/site-packages/thLib/ui.py'),
                      'getdir')]},
        loc('../../../../../Python27/Lib/unittest/case.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Python27/Lib/unittest/case.py'),
                      'DIFF_OMITTED')]},
        loc('../../../../../Python27/lib/lib-tk/Tkinter.py'): {'column-width'\
        's': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python27/lib/lib-tk/Tkinter.py'),
                      'At')]},
        u'Nach Modul': {'expanded-nodes': [[('generic attribute',
        loc('../../../Office/thLib/thLib/__init__.py'),
        '')],
        [('generic attribute',
          loc('../../../Office/thLib/thLib/vector.py'),
          ''),
         ('generic attribute',
          loc('../../../Office/thLib/thLib/vector.py'),
          '')]],
                        'selected-nodes': [[('generic attribute',
        loc('../../../Office/thLib/thLib/vector.py'),
        ''),
        ('generic attribute',
         loc('../../../Office/thLib/thLib/vector.py'),
         '')]],
                        'top-node': None},
        loc('../../../../../Temp/debugMe.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../../Temp/debugMe.py'),
                      'json')]},
        loc('../../../../../Temp/lorentz_animation.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Temp/lorentz_animation.py'),
                      'anim')]},
        loc('../../../../../Temp/test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Temp/test.py'),
                      'plot_me')]},
        loc('../../../../AppData/Local/Temp/surface3d_demo.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../AppData/Local/Temp/surface3d_demo.py'),
                             'Z')]],
        'top-node': [('generic attribute',
                      loc('../../../../AppData/Local/Temp/surface3d_demo.py'),
                      'ax')]},
        loc('../../../../CloudStation/springer/Code/C10_4_fitLine.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C10_4_fitLine.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C10_5_anscombe.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('imported attribute',
                             loc('../../../../CloudStation/springer/Code/C10_5_anscombe.py'),
                             'C2_8_mystyle')]],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C10_5_anscombe.py'),
                      'sns')]},
        loc('../../../../CloudStation/springer/Code/C10_7_modeling.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('imported attribute',
                             loc('../../../../CloudStation/springer/Code/C10_7_modeling.py'),
                             'np')]],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C10_7_modeling.py'),
                      'model_formulas')]},
        loc('../../../../CloudStation/springer/Code/C11_2_multipleRegression.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C11_2_multipleRegression.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C12_2_logit.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C12_2_logit.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C13_2_bayesianStats.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C13_2_bayesianStats.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C2_7_statsmodelsIntro.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('imported attribute',
                             loc('../../../../CloudStation/springer/Code/C2_7_statsmodelsIntro.py'),
                             'plt')]],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C2_7_statsmodelsIntro.py'),
                      'simple_fit')]},
        loc('../../../../CloudStation/springer/Code/C2_8_getdata.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C2_8_getdata.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C2_8_mystyle.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C2_8_mystyle.py'),
                      'printout_plain')]},
        loc('../../../../CloudStation/springer/Code/C3_2_readZip.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C3_2_readZip.py'),
                      'pd')]},
        loc('../../../../CloudStation/springer/Code/C4_2_gettingStarted.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C4_2_gettingStarted.py'),
                      'main')]},
        loc('../../../../CloudStation/springer/Code/C4_3_basicPrinciples.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C4_3_basicPrinciples.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C5_4_binomialTest.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C5_4_binomialTest.py'),
                      'stats')]},
        loc('../../../../CloudStation/springer/Code/C5_4_distDiscrete.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C5_4_distDiscrete.py'),
                      'show_binomial')]},
        loc('../../../../CloudStation/springer/Code/C5_5_centralLimitTheorem.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C5_5_centralLimitTheorem.py'),
                      'showAsHistogram')]},
        loc('../../../../CloudStation/springer/Code/C5_5_distNormal.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../CloudStation/springer/Code/C5_5_distNormal.py'),
                             'shifted_normal')]],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C5_5_distNormal.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/C5_6_distContinuous.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C5_6_distContinuous.py'),
                      'showT')]},
        loc('../../../../CloudStation/springer/Code/C6_1_checkNormality.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/C6_1_checkNormality.py'),
                      'check_normality')]},
        loc('../../../../CloudStation/springer/Code/C7_3_multipleTesting.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../CloudStation/springer/Code/C7_3_multipleTesting.py'),
                             'main')]],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/C7_3_multipleTesting.py'),
                      'np')]},
        loc('../../../../CloudStation/springer/Code/Challenger_CIs.png'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../../CloudStation/springer/Code/L2_2_squareMe.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../CloudStation/springer/Code/L2_2_squareMe.py'),
                      'squared')]},
        loc('../../../../CloudStation/springer/Code/L9_2_lifelinesSurvival.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/L9_2_lifelinesSurvival.py'),
                      'plt')]},
        loc('../../../../CloudStation/springer/Code/test_CLprgs.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [[('imported attribute',
                             loc('../../../../CloudStation/springer/Code/test_CLprgs.py'),
                             'C10_5_anscombe')]],
        'top-node': [('imported attribute',
                      loc('../../../../CloudStation/springer/Code/test_CLprgs.py'),
                      'np')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Auditory/submitted/2015/py/Exercise1_Waltisberg/Exercise 1/ex1.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Auditory/submitted/2015/py/Exercise1_Waltisberg/Exercise 1/ex1.py'),
                      'create_indices')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Vestibular/Submitted/2015/py/Exercise2_Baechtold_Rueegsegger_Studer/Baechtold_SensorySytemExII.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Vestibular/Submitted/2015/py/Exercise2_Baechtold_Rueegsegger_Studer/Baechtold_SensorySytemExII.py'),
                             'quatRot')]],
        'top-node': [('class def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Vestibular/Submitted/2015/py/Exercise2_Baechtold_Rueegsegger_Studer/Baechtold_SensorySytemExII.py'),
                      'Arrow3D')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Vestibular/Submitted/2015/py/Exercise2_Baechtold_Rueegsegger_Studer/comments.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Angelino_Braendli_Dafflon/comments.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Gygax/Exercise2_Vestibular.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Gygax/Exercise2_Vestibular.py'),
                             'utricle')]],
        'top-node': [('function def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Gygax/Exercise2_Vestibular.py'),
                      'calcOrientation')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Gygax/comments.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Lund/Exercise2_Vestibular.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_VestibularProcessing/Submitted/2014/Exercise2_Lund/Exercise2_Vestibular.py'),
                      'absOmega')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Angelino_Braendli_Dafflon/Exercise3_Visual.py'): {'e'\
        'xpanded-nodes': [[('class def',
                            loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Angelino_Braendli_Dafflon/Exercise3_Visual.py'),
                            'MyImages')]],
        'selected-nodes': [[('function def',
                             loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Angelino_Braendli_Dafflon/Exercise3_Visual.py'),
                             'gabor_kernel')]],
        'top-node': [('function def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Angelino_Braendli_Dafflon/Exercise3_Visual.py'),
                      'gabor_kernel')]},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Angelino_Braendli_Dafflon/comments.txt'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Gygax_2014/image processing final.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Documents/Teaching/ETH/CSS/Exercises/Ex_Visual/submitted/2014/Exercise3_Gygax_2014/image processing final.py'),
                      'applyFilters')]},
        loc('../../../CSS/Cochlea_Implants/Quick_ci.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../CSS/Cochlea_Implants/Quick_ci.py'),
                      'CochleaImplant')]},
        loc('../../../CSS/Neurons/Fitzhugh_Nagumo.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../CSS/Neurons/Fitzhugh_Nagumo.py'),
                      'DSargs')]},
        loc('../../../CSS/Vestibular_Implants/simulate_VI.py'): {'column-wid'\
        'ths': [1.0],
        'expanded-nodes': [[('function def',
                             loc('../../../CSS/Vestibular_Implants/simulate_VI.py'),
                             'main')]],
        'selected-nodes': [[('function def',
                             loc('../../../CSS/Vestibular_Implants/simulate_VI.py'),
                             'main')]],
        'top-node': [('class def',
                      loc('../../../CSS/Vestibular_Implants/simulate_VI.py'),
                      'Head')]},
        loc('../../../Office/Dev/keypress_demo.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/Dev/keypress_demo.py'),
                      'press')]},
        loc('../../../Office/Dev/reservoir.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Office/Dev/reservoir.py'),
                      'reservoir')]},
        loc('../../../Office/Dev/show_me.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Office/Dev/show_me.py'),
                             'Viewer')]],
        'top-node': [('class def',
                      loc('../../../Office/Dev/show_me.py'),
                      'Viewer')]},
        loc('../../../Office/Dev/th_traits.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Office/Dev/th_traits.py'),
                      'projectA')]},
        loc('../../../Office/python/CSS/Neurons/HH_model.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/CSS/Neurons/HH_model.py'),
                      'auxfnDBclass')]},
        loc('../../../Office/python/CSS/Retina_Implants/__init__.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Office/python/CSS/Retina_Implants/filter_bank.py'),
                      '')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/discrete_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/discrete_test.py'),
                      'TestDiscrete')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/margin_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/margin_test.py'),
                      'TestMargin')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/modelsimp_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/modelsimp_test.py'),
                      'TestModelsimp')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('../../../../../Documents/Teaching/Master_FH/Kinematics/Exercises/Exercises_2013/Ex4/Pendulum.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Documents/Teaching/Master_FH/Kinematics/Exercises/Exercises_2013/Ex4/Pendulum.py'),
                      'data')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/Exercises/ex4_solution.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/Exercises/ex4_solution.py'),
                      'anovaResults')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovaOneway.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovaOneway.py'),
                      'anova_byHand')]},
        loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovaTwoway.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Documents/Teaching/Master_FH/Stats/dist/Code/anovaTwoway.py'),
                      'anova_interaction')]},
        loc('../../../Office/python/CSS/Cochlea_Implants/soundlib.py'): {'ex'\
        'panded-nodes': [[('class def',
                           loc('../../../Office/python/CSS/Cochlea_Implants/soundlib.py'),
                           'Sound')]],
        'selected-nodes': [[('function def',
                             loc('../../../Office/python/CSS/Cochlea_Implants/soundlib.py'),
                             'module_exists')]],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/CSS/Cochlea_Implants/soundlib.py'),
                      'os')]},
        loc('../../../Office/python/CSS/Quick_ci.py'): {'expanded-nodes': [[('f'\
        'unction def',
        loc('../../../Office/python/CSS/Quick_ci.py'),
        'main')]],
        'selected-nodes': [[('class def',
                             loc('../../../Office/python/CSS/Quick_ci.py'),
                             'CochleaImplant')]],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Quick_ci.py'),
                      'CochleaImplant')]},
        loc('../../../Office/python/CSS/Retina_Implants/simulate_RI.py'): {'e'\
        'xpanded-nodes': [[('class def',
                            loc('../../../Office/python/CSS/Retina_Implants/simulate_RI.py'),
                            'MyImages')]],
        'selected-nodes': [[('class def',
                             loc('../../../Office/python/CSS/Retina_Implants/simulate_RI.py'),
                             'MyImages')]],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/CSS/Retina_Implants/simulate_RI.py'),
                      'cv2')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/bdalg_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/bdalg_test.py'),
                      'TestFeedback')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/convert_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/convert_test.py'),
                      'TestConvert')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/frd_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/frd_test.py'),
                      'TestFRD')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/mateqn_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/mateqn_test.py'),
                      'TestMatrixEquations')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/matlab_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/matlab_test.py'),
                      'TestMatlab')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/minreal_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/minreal_test.py'),
                      'TestMinreal')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/nichols_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/nichols_test.py'),
                      'TestStateSpace')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/phaseplot_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/phaseplot_test.py'),
                      'TestPhasePlot')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/rlocus_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/rlocus_test.py'),
                      'TestRootLocus')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/slycot_convert_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/slycot_convert_test.py'),
                      'TestSlycot')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/statefbk_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/statefbk_test.py'),
                      'TestStatefbk')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/statesp_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/statesp_test.py'),
                      'TestStateSpace')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/timeresp_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/timeresp_test.py'),
                      'TestTimeresp')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/xferfcn_test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/Downloads/control-0.6d/tests/xferfcn_test.py'),
                      'TestXferFcn')]},
        loc('../../../Office/python/CSS/Vestibular_Implants/simulate_VI.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Office/python/CSS/Vestibular_Implants/simulate_VI.py'),
                             'outFile')]],
        'top-node': [('class def',
                      loc('../../../Office/python/CSS/Vestibular_Implants/simulate_VI.py'),
                      'Head')]},
        loc('../../../Office/python/CSS/simulate_CI.py'): {'expanded-nodes': [[('c'\
        'lass def',
        loc('../../../Office/python/CSS/simulate_CI.py'),
        'CochleaImplant')],
        [('function def',
          loc('../../../Office/python/CSS/simulate_CI.py'),
          'main')],
        [('function def',
          loc('../../../Office/python/CSS/simulate_CI.py'),
          'progressbar')]],
        'selected-nodes': [[('function def',
                             loc('../../../Office/python/CSS/simulate_CI.py'),
                             'pSpect')]],
        'top-node': [('function def',
                      loc('../../../Office/python/CSS/simulate_CI.py'),
                      'calcTransform')]},
        loc('../../../Office/python/Dev/openCV/openCV2_demo.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../Office/python/Dev/openCV/openCV2_demo.py'),
                             'show_and_wait')]],
        'top-node': [('function def',
                      loc('../../../Office/python/Dev/openCV/openCV2_demo.py'),
                      'calc_Convolution')]},
        loc('../../../Office/python/Vestibular_Implants/simSystem.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../Office/python/Vestibular_Implants/simSystem.py'),
                             'main')]],
        'top-node': [('function def',
                      loc('../../../Office/python/Vestibular_Implants/simSystem.py'),
                      'main')]},
        loc('../../../Office/python/Vestibular_Implants/simulate_VI.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Office/python/Vestibular_Implants/simulate_VI.py'),
                             'Sensor')]],
        'top-node': [('class def',
                      loc('../../../Office/python/Vestibular_Implants/simulate_VI.py'),
                      'Head')]},
        loc('../../../Office/python/thLib/testMe.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/thLib/testMe.py'),
                      'json')]},
        loc('../../../Office/python/thLib/thLib/quat.py'): {'expanded-nodes': [],
        'selected-nodes': [[('imported attribute',
                             loc('../../../Office/python/thLib/thLib/quat.py'),
                             'np')]],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/thLib/thLib/quat.py'),
                      'np')]},
        loc('../../../Office/python/thLib/thLib/signals.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/python/thLib/thLib/signals.py'),
                      'corrvis')]},
        loc('../../../Office/python/thLib/thLib/sounds.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../Office/python/thLib/thLib/sounds.py'),
                      'np')]},
        loc('../../../Office/statsIntro/mcnemar.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/statsIntro/mcnemar.py'),
                      'mcnemar')]},
        loc('../../../Office/statsIntro/mcnemar_web.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Office/statsIntro/mcnemar_web.py'),
                      'a')]},
        loc('../../../Office/thLib/grade.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/grade.py'),
                      'Cursor')]},
        loc('../../../Office/thLib/savgol.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/thLib/savgol.py'),
                      'savgol')]},
        loc('../../../Office/thLib/temp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/thLib/temp.py'),
                      'a')]},
        loc('../../../Office/thLib/test_savgol.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/test_savgol.py'),
                      'TestSequenceFunctions')]},
        loc('../../../Office/thLib/thLib/__init__.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Office/thLib/thLib/conf.py'),
                      '')]},
        loc('../../../Office/thLib/thLib/imu.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../Office/thLib/thLib/imu.py'),
                             'reconstruct_movement')]],
        'top-node': [('generic attribute',
                      loc('../../../Office/thLib/thLib/imu.py'),
                      'acc1')]},
        loc('../../../Office/thLib/thLib/quat.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/thLib/thLib/quat.py'),
                      'deg2quat')]},
        loc('../../../Office/thLib/thLib/rotmat.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../Office/thLib/thLib/rotmat.py'),
                             'rotmat2Euler')]],
        'top-node': [('function def',
                      loc('../../../Office/thLib/thLib/rotmat.py'),
                      'R1')]},
        loc('../../../Office/thLib/thLib/tests/test_fits.py'): {'column-widt'\
        'hs': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/thLib/tests/test_fits.py'),
                      'TestSequenceFunctions')]},
        loc('../../../Office/thLib/thLib/tests/test_quat.py'): {'column-widt'\
        'hs': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../../../Office/thLib/thLib/tests/test_quat.py'),
                             'TestSequenceFunctions')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/thLib/tests/test_quat.py'),
                      'TestSequenceFunctions'),
                     ('function def',
                      loc('../../../../../Python27/Lib/unittest/case.py'),
                      'TestCase._baseAssertEqual')]},
        loc('../../../Office/thLib/thLib/tests/test_rotmat.py'): {'column-wi'\
        'dths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/thLib/tests/test_rotmat.py'),
                      'TestSequenceFunctions')]},
        loc('../../../Office/thLib/thLib/tests/test_thLib.py'): {'column-wid'\
        'ths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Office/thLib/thLib/tests/test_thLib.py'),
                      'TestSequenceFunctions')]},
        loc('../../../Office/thLib/thLib/vector.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Office/thLib/thLib/vector.py'),
                      'angle')]},
        loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/ODEsystem.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/ODEsystem.py'),
                      'acos')]},
        loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/Vode_ODEsystem.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/Vode_ODEsystem.py'),
                      'acos')]},
        loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/baseclasses.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../../WinPython-32bit-3.4.2.3/python-3.4.2/Lib/site-packages/PyDSTool/Generator/baseclasses.py'),
                      'acos')]},
        loc('../../../../../WinPython-64bit-3.5.1.2/python-3.5.1.amd64/lib/json/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../WinPython-64bit-3.5.1.2/python-3.5.1.amd64/lib/json/tool.py'),
                      '')]},
        loc('../../../../../WinPython-64bit-3.5.1.2/python-3.5.1.amd64/lib/json/decoder.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('imported attribute',
                      loc('../../../../../WinPython-64bit-3.5.1.2/python-3.5.1.amd64/lib/json/decoder.py'),
                      're')]},
        loc('../../../../../th_mayavi.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../th_mayavi.py'),
                      'mcnemar')]},
        loc('x-wingide-zip://c:/WinPython-64bit-3.3.3.3/python-3.3.3.amd64/lib/site-packages/control-0.6d-py3.3.egg//control/bdalg.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('x-wingide-zip://c:/WinPython-64bit-3.3.3.3/python-3.3.3.amd64/lib/site-packages/control-0.6d-py3.3.egg//control/bdalg.py'),
                      'append')]}},
                                'browse_mode': u'By Module',
                                'follow-selection': True,
                                'sort_mode': 'By type',
                                'visibility_options': {u'Attributes': False,
        u'Classes': True,
        u'Derived Classes': False,
        u'Imported': False,
        u'Inherited': True,
        u'Methods': True,
        u'Modules': True,
        u'Public': True,
        u'Semi-Private': True,
        u'Variables': False}}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('open-files',
                               'tall',
                               1,
                               {'tree-state': []}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          5],
        'notebook_display': 'normal',
        'notebook_percent': 0.35325365205843295,
        'override_title': None,
        'pagelist': [('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'R_initialOrientation',
                                       'fReverse': False,
                                       'fSearchText': u'function',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('sksound/tests/test_sksound.py'),
                                       loc('sksound/tests/test_sound.py')],
                       'filter': u'',
                       'recent-filters': ['test*.py',
        'test'],
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(1,)],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'thLib',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {u'file:d:/Users/thomas/Data/CloudStation/Python/scikit-sound/sksound/sounds.py': ['m'\
        'y_file\n',
        'my_path\n']},
                       'launch-id': None,
                       'sel-line': 4L,
                       'sel-line-start': 22L,
                       'selection_end': 22L,
                       'selection_start': 22L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-0DNXZzqwX8Qeu8Hd'}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'inFile'),
                                       ('eval',
        u'self.rate')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('sksound/sounds.py'),
        {'attrib-starts': [('FFMPEG_info|0|',
                            81),
                           ('FFMPEG_info|0|.__init__|0|',
                            98)],
         'code-line': '        "ffmpeg" and "ffplay" of the FFMPEG_info obje'\
                      'ct"""\r\n',
         'first-line': 54L,
         'folded-linenos': [],
         'sel-line': 100L,
         'sel-line-start': 2553L,
         'selection_end': 2601L,
         'selection_start': 2597L,
         'zoom': 0L},
        1616929330.608],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.__init__|0|',
                             98)],
          'code-line': "        app_name = 'FFMPEG_info'\r\n",
          'first-line': 54L,
          'folded-linenos': [],
          'sel-line': 102L,
          'sel-line-start': 2623L,
          'selection_end': 2654L,
          'selection_start': 2650L,
          'zoom': 0L},
         1616929334.482],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.__init__|0|',
                             98)],
          'code-line': '                info = json.load(in_file)\r\n',
          'first-line': 77L,
          'folded-linenos': [],
          'sel-line': 123L,
          'sel-line-start': 3485L,
          'selection_end': 3505L,
          'selection_start': 3501L,
          'zoom': 0L},
         1616929336.373],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.__init__|0|',
                             98)],
          'code-line': "                self.ffmpeg = info['ffmpeg']\r\n",
          'first-line': 77L,
          'folded-linenos': [],
          'sel-line': 124L,
          'sel-line-start': 3528L,
          'selection_end': 3562L,
          'selection_start': 3558L,
          'zoom': 0L},
         1616929343.001],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.__init__|0|',
                             98)],
          'code-line': "                self.ffplay = info['ffplay']\r\n",
          'first-line': 88L,
          'folded-linenos': [],
          'sel-line': 125L,
          'sel-line-start': 3574L,
          'selection_end': 3608L,
          'selection_start': 3604L,
          'zoom': 0L},
         1616929345.665],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.set|0|',
                             127)],
          'code-line': '        Set the config-filename, and write the FFMPE'\
                       'G_info\r\n',
          'first-line': 88L,
          'folded-linenos': [],
          'sel-line': 129L,
          'sel-line-start': 3663L,
          'selection_end': 3721L,
          'selection_start': 3717L,
          'zoom': 0L},
         1616929346.093],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.set|0|',
                             127)],
          'code-line': "        info = {'ffmpeg':self.ffmpeg, 'ffplay': self"\
                       ".ffplay}\r\n",
          'first-line': 115L,
          'folded-linenos': [],
          'sel-line': 161L,
          'sel-line-start': 4996L,
          'selection_end': 5008L,
          'selection_start': 5004L,
          'zoom': 0L},
         1616929347.541],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.set|0|',
                             127)],
          'code-line': '                json.dump(info, outFile)\r\n',
          'first-line': 115L,
          'folded-linenos': [],
          'sel-line': 164L,
          'sel-line-start': 5130L,
          'selection_end': 5160L,
          'selection_start': 5156L,
          'zoom': 0L},
         1616929349.926],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('FFMPEG_info|0|',
                             81),
                            ('FFMPEG_info|0|.set|0|',
                             127)],
          'code-line': "                print('Config information written to"\
                       " {0}'.format(os.path.abspath(self.config_file)))\r\n",
          'first-line': 128L,
          'folded-linenos': [],
          'sel-line': 165L,
          'sel-line-start': 5172L,
          'selection_end': 5206L,
          'selection_start': 5202L,
          'zoom': 0L},
         1616929350.257],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174)],
          'code-line': '        - get_info\r\n',
          'first-line': 170L,
          'folded-linenos': [],
          'sel-line': 216L,
          'sel-line-start': 6623L,
          'selection_end': 6641L,
          'selection_start': 6637L,
          'zoom': 0L},
         1616929351.028],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '        self.info = FFMPEG_info()\r\n',
          'first-line': 197L,
          'folded-linenos': [],
          'sel-line': 243L,
          'sel-line-start': 7298L,
          'selection_end': 7315L,
          'selection_start': 7311L,
          'zoom': 0L},
         1616929351.781],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '        self.info = FFMPEG_info()\r\n',
          'first-line': 197L,
          'folded-linenos': [],
          'sel-line': 243L,
          'sel-line-start': 7298L,
          'selection_end': 7306L,
          'selection_start': 7306L,
          'zoom': 0L},
         1616929359.32],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.read_sound|0|',
                             264)],
          'code-line': "            cmd = [self.info.ffmpeg, '-i', inFile, o"\
                       "utFile, '-y']\r\n",
          'first-line': 261L,
          'folded-linenos': [],
          'sel-line': 307L,
          'sel-line-start': 9400L,
          'selection_end': 9428L,
          'selection_start': 9419L,
          'zoom': 0L},
         1616929376.151],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.play|0|',
                             330)],
          'code-line': "                    #cmd = [self.info.ffplay, '-auto"\
                       "exit', '-nodisp', '-i', tmpFile.name]\r\n",
          'first-line': 330L,
          'folded-linenos': [],
          'sel-line': 376L,
          'sel-line-start': 11639L,
          'selection_end': 11676L,
          'selection_start': 11667L,
          'zoom': 0L},
         1616929382.885],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.play|0|',
                             330)],
          'code-line': "                    #cmd = [self.info.ffplay, '-auto"\
                       "exit', '-nodisp', '-i', self.source]\r\n",
          'first-line': 350L,
          'folded-linenos': [],
          'sel-line': 396L,
          'sel-line-start': 12593L,
          'selection_end': 12630L,
          'selection_start': 12621L,
          'zoom': 0L},
         1616929387.077],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '        self.info = FFMPEG_info()\r\n',
          'first-line': 197L,
          'folded-linenos': [],
          'sel-line': 243L,
          'sel-line-start': 7298L,
          'selection_end': 7315L,
          'selection_start': 7306L,
          'zoom': 0L},
         1616929391.153],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '        self.info = FFMPEG_info()\r\n',
          'first-line': 197L,
          'folded-linenos': [],
          'sel-line': 243L,
          'sel-line-start': 7298L,
          'selection_end': 7306L,
          'selection_start': 7306L,
          'zoom': 0L},
         1616929415.348],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.get_info|0|',
                             462)],
          'code-line': '    def get_info(self):\r\n',
          'first-line': 436L,
          'folded-linenos': [],
          'sel-line': 462L,
          'sel-line-start': 14943L,
          'selection_end': 14959L,
          'selection_start': 14951L,
          'zoom': 0L},
         1616929575.451],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '    def __init__(self, inFile = None, inData = None,'\
                       ' inRate = None):\r\n',
          'first-line': 213L,
          'folded-linenos': [],
          'sel-line': 239L,
          'sel-line-start': 7139L,
          'selection_end': 7155L,
          'selection_start': 7147L,
          'zoom': 0L},
         1616929962.118],
        [loc('sksound/sounds.py'),
         {'attrib-starts': [('Sound|0|',
                             174),
                            ('Sound|0|.__init__|0|',
                             239)],
          'code-line': '    def __init__(self, inFile = None, inData = None,'\
                       ' inRate = None):\r\n',
          'first-line': 239L,
          'folded-linenos': [],
          'sel-line': 239L,
          'sel-line-start': 7139L,
          'selection_end': 7155L,
          'selection_start': 7147L,
          'zoom': 0L},
         1616929984.32]],
        20),
        'current-loc': loc('sksound/sounds.py'),
        'editor-state-list': [(loc('docs/conf.py'),
                               {'attrib-starts': [],
                                'code-line': '# -*- coding: utf-8 -*-\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('docs/index.rst'),
                               {'attrib-starts': [],
                                'code-line': 'The module :py:mod:`sounds` ha'\
        's two classes:\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 10L,
                                'sel-line-start': 368L,
                                'selection_end': 411L,
                                'selection_start': 411L,
                                'zoom': 0L}),
                              (loc('sksound/sounds.py'),
                               {'attrib-starts': [],
                                'code-line': '        - http://www.evermeet.'\
        'cx/ffplay/ffplay-4.1.1.7z\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 23L,
                                'sel-line-start': 646L,
                                'selection_end': 701L,
                                'selection_start': 701L,
                                'zoom': 0L}),
                              (loc('docs/sounds.rst'),
                               {'attrib-starts': [],
                                'code-line': '    sounds.Sound.read_sound\r'\
        '\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 22L,
                                'sel-line-start': 332L,
                                'selection_end': 359L,
                                'selection_start': 359L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('docs/conf.py'),
         loc('docs/index.rst'),
         loc('sksound/sounds.py'),
         loc('docs/sounds.rst')]),
                               'open_files': [u'docs/conf.py',
        u'docs/index.rst',
        u'docs/sounds.rst',
        u'sksound/sounds.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.48857142857142855},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           5),
                          1616930132.406),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.6520584329349269},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1555165000.419),
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         961,
                         1046)}]}
guimgr.recent-documents = [loc('sksound/sounds.py'),
                           loc('docs/index.rst'),
                           loc('docs/sounds.rst')]
guimgr.visual-state = {loc('../../../../../Programs/WinPython-64bit-3.6.3.0Qt5/python-3.6.3.amd64/Lib/ntpath.py'): {'a'\
        'ttrib-starts': [('join',
                          73)],
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 74L,
        'sel-line-start': 2420L,
        'selection_end': 2420L,
        'selection_start': 2420L,
        'zoom': 0L},
                       loc('../../../../../Programs/WinPython-64bit-3.6.3.0Qt5/python-3.6.3.amd64/Lib/site-packages/sksound/sounds.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 1358L,
        'selection_end': 1369L,
        'selection_start': 1369L,
        'zoom': 0L},
                       loc('../../../../../Programs/WinPython-64bit-3.6.3.0Qt5/python-3.6.3.amd64/Lib/unittest/loader.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 160L,
        'selection_end': 160L,
        'selection_start': 160L,
        'zoom': 0L},
                       loc('README.rst'): {'attrib-starts': [],
        'code-line': 'http://work.thaslwanter.at/sksound/html/\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 169L,
        'selection_end': 209L,
        'selection_start': 209L,
        'zoom': 0L},
                       loc('docs/index.rst'): {'attrib-starts': [],
        'code-line': '   misc\r\n',
        'first-line': 54L,
        'folded-linenos': [],
        'sel-line': 72L,
        'sel-line-start': 2230L,
        'selection_end': 2237L,
        'selection_start': 2237L,
        'zoom': 0L},
                       loc('docs/misc.rst'): {'attrib-starts': [],
        'code-line': 'General utility routines, especially simple GUI dialog'\
                     's for different\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 33L,
        'selection_end': 33L,
        'selection_start': 33L,
        'zoom': 0L},
                       loc('sksound/__init__.py'): {'attrib-starts': [],
        'code-line': "'''\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('sksound/sounds.py'): {'attrib-starts': [('Sound|'\
        '0|',
        174),
        ('Sound|0|._selectInput|0|',
         539)],
        'code-line': "            print('Selection: ' + full_in_file)\r\n",
        'first-line': 537L,
        'folded-linenos': [],
        'sel-line': 550L,
        'sel-line-start': 17479L,
        'selection_end': 17479L,
        'selection_start': 17479L,
        'zoom': 0L},
                       loc('sksound/tests/test_sksound.py'): {'attrib-starts': [('T'\
        'estSequenceFunctions|0|',
        8),
        ('TestSequenceFunctions|0|.test_dummy|0|',
         14)],
        'code-line': "        print('hi, thomas!')\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 340L,
        'selection_end': 365L,
        'selection_start': 365L,
        'zoom': 0L},
                       loc('sksound/tests/test_sound.py'): {'attrib-starts': [('T'\
        'estSequenceFunctions|0|',
        10),
        ('TestSequenceFunctions|0|.test_sound_select|0|',
         43)],
        'code-line': '        inSound = sounds.Sound(in_file)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1556L,
        'selection_end': 1593L,
        'selection_start': 1593L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'thLib',
                         u'th']
testing.stored-results = (1,
                          [(u'c:\\Users\\thomas\\CloudStation\\Python\\scikit-sound\\sksound\\tests\\test_sksound.py',
                            [('TestSequenceFunctions.test_dummy',
                              0,
                              None,
                              '',
                              None,
                              1616930138,
                              15),
                             ('TestSequenceFunctions.test_sksounds',
                              0,
                              None,
                              '',
                              None,
                              1616930138,
                              11)]),
                           (u'c:\\Users\\thomas\\CloudStation\\Python\\scikit-sound\\sksound\\tests\\test_sound.py',
                            [('TestSequenceFunctions.test_sound_select',
                              0,
                              None,
                              '',
                              None,
                              1616930145,
                              44),
                             ('TestSequenceFunctions.test_sound_generate',
                              0,
                              None,
                              '',
                              None,
                              1616930145,
                              13),
                             ('TestSequenceFunctions.test_sound_write',
                              0,
                              None,
                              '',
                              None,
                              1616930145,
                              61),
                             ('TestSequenceFunctions.test_sound_read',
                              0,
                              None,
                              '',
                              None,
                              1616930145,
                              28)])],
                          {})
versioncontrol.git.remote-history = ['https://github.com/thomas-haslwanter/s'\
                                     'cikit-sound.git']
